-- Warehouse and repository creation

USE ROLE ACCOUNTADMIN;
CREATE WAREHOUSE CONTAINER_WH WITH WAREHOUSE_SIZE='xsmall';
USE DATABASE API;
CREATE OR REPLACE IMAGE REPOSITORY API;

-- User creation

CREATE ROLE CONTAINER_ADMIN;
GRANT USAGE ON WAREHOUSE CONTAINER_WH TO ROLE CONTAINER_ADMIN;
GRANT ALL ON DATABASE API TO ROLE CONTAINER_ADMIN;
GRANT ALL ON SCHEMA API.PUBLIC TO ROLE CONTAINER_ADMIN;
GRANT READ, WRITE ON IMAGE REPOSITORY API TO ROLE CONTAINER_ADMIN;

-- Compute pool creation

USE ROLE ACCOUNTADMIN;

CREATE COMPUTE POOL API
  MIN_NODES = 1
  MAX_NODES = 5
  INSTANCE_FAMILY = CPU_X64_XS;

GRANT USAGE ON COMPUTE POOL API TO ROLE CONTAINER_ADMIN;
GRANT MONITOR ON COMPUTE POOL API TO ROLE CONTAINER_ADMIN;
GRANT BIND SERVICE ENDPOINT ON ACCOUNT TO ROLE CONTAINER_ADMIN;

-- Network policy creation

USE ROLE ACCOUNTADMIN;
CREATE OR REPLACE NETWORK RULE NGROK_OUT TYPE=HOST_PORT MODE = EGRESS VALUE_LIST=('connect.ngrok-agent.com:443');

CREATE OR REPLACE EXTERNAL ACCESS INTEGRATION NGROK
ALLOWED_NETWORK_RULES = (NGROK_OUT) ENABLED = TRUE;

GRANT USAGE ON INTEGRATION NGROK TO ROLE CONTAINER_ADMIN;

-- Service deployment (after image push, see readme)

USE ROLE CONTAINER_ADMIN;
CREATE SERVICE API.PUBLIC.API
 IN COMPUTE POOL API
 FROM SPECIFICATION
$$
spec:
  container:
  - name: jgapi
    image: /api/public/api/jgapi:latest
    env:
      PRIVATE_KEY_PATH: "/SERV_API_key.p8"
      API_PASSWORD: "20165478"
      JG_ID: "1"
      CORRECT_ANSWER: "win"
      PORT: 80
      NGROK_AUTHTOKEN: "<your_ngrok_token>"
    resources:
      requests:
        cpu: 0.5
        memory: 128M
      limits:
        cpu: 1
        memory: 256M
  endpoint:
  - name: api
    port: 80
    public: true
$$
QUERY_WAREHOUSE = CONTAINER_WH
EXTERNAL_ACCESS_INTEGRATIONS = (NGROK);

-- Check status and logs

CALL SYSTEM$GET_SERVICE_STATUS('api');
CALL SYSTEM$GET_SERVICE_LOGS('api.public.api', 0, 'jgapi');

-- To get internal endpoint (for debug)

SHOW ENDPOINTS IN SERVICE API;
